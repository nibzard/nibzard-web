---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';
import SearchResults from '../components/SearchResults.jsx';

const { searchParams } = new URL(import.meta.env.SITE + Astro.request.url);
const initialQuery = searchParams.get('q') || '';

const logEntries = await getCollection('log', ({ data }) => data.draft !== true);
const thoughts = await getCollection('thoughts', ({ data }) => data.draft !== true);
const nowEntries = await getCollection('now', ({ data }) => data.draft !== true);
const imageEntries = await getCollection('images', ({ data }) => data.draft !== true);

// Define helper functions s and a in the frontmatter scope as well
const s = (val: any, def = '') => (val === null || typeof val === 'undefined') ? def : String(val);
const a = (val: any, def = []) => Array.isArray(val) ? val : def;

const clientFeedEntries = [
  ...logEntries.map(entry => ({
    type: 'log',
    slug: s(entry.slug),
    date: entry.data.date.toISOString(),
    title: s(entry.data.title),
    tldr: s(entry.data.tldr),
    tags: a(entry.data.tags),
  })),
  ...thoughts.map(entry => ({
    type: 'thought',
    slug: s(entry.slug),
    date: entry.data.date.toISOString(),
    text: s((entry.data as any)?.text),
    tags: a((entry.data as any)?.tags),
  })),
  ...nowEntries.map(entry => ({
    type: 'now',
    slug: s(entry.slug),
    date: entry.data.date.toISOString(),
    title: s((entry.data as any)?.title),
    text: s((entry.data as any)?.text),
    tags: a((entry.data as any)?.tags),
  })),
  ...imageEntries.map(entry => ({
    type: 'image',
    slug: s(entry.slug),
    date: entry.data.date.toISOString(),
    caption: s((entry.data as any)?.caption),
    imageUrl: s((entry.data as any)?.image?.src),
    tags: a((entry.data as any)?.tags),
  })),
];

---

<BaseLayout title={`Search Results for "${initialQuery}" | nibzard`} description={`Search results for "${initialQuery}" on nibzard.`}>
  <div class="search-page-container">
    <h1>Search Results{initialQuery && `: "${initialQuery}"`}</h1>

    <SearchResults feedEntries={clientFeedEntries} initialQuery={initialQuery} client:load />
  </div>
</BaseLayout>