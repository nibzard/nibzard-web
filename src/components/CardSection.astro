---
/**
 * CardSection Component
 * A reusable card layout container with customizable styling
 */

interface Props {
  title?: string;
  description?: string;
  columns?: 1 | 2 | 3 | 4;
  class?: string;
}

const {
  title,
  description,
  columns = 3,
  class: className = "",
} = Astro.props;
---

<section class={`card-section ${className}`}>
  {title && <h2>{title}</h2>}
  {description && <p class="section-description">{description}</p>}
  
  <div class={`card-grid grid-cols-${columns}`}>
    <slot />
  </div>
</section>

<style>
  .card-section {
    margin: var(--space-xl) 0;
  }
  
  .card-section h2 {
    font-size: 1.5rem;
    margin-bottom: var(--space-md);
  }
  
  .section-description {
    margin-bottom: var(--space-lg);
    color: var(--color-text-muted);
  }
  
  .card-grid {
    display: grid;
    gap: var(--space-lg);
  }
  
  .grid-cols-1 {
    grid-template-columns: 1fr;
  }
  
  .grid-cols-2 {
    grid-template-columns: repeat(2, 1fr);
  }
  
  .grid-cols-3 {
    grid-template-columns: repeat(3, 1fr);
  }
  
  .grid-cols-4 {
    grid-template-columns: repeat(4, 1fr);
  }
  
  @media (max-width: 1024px) {
    .grid-cols-4 {
      grid-template-columns: repeat(3, 1fr);
    }
  }
  
  @media (max-width: 768px) {
    .grid-cols-3, .grid-cols-4 {
      grid-template-columns: repeat(2, 1fr);
    }
  }
  
  @media (max-width: 480px) {
    .grid-cols-2, .grid-cols-3, .grid-cols-4 {
      grid-template-columns: 1fr;
    }
  }
</style>