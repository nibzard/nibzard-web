---
interface Props {
  code: string;
  language?: string;
}

const { code, language = "text" } = Astro.props;
const languageDisplay = language === "text" ? "code" : language;
---

<div class="code-block" data-language={language}>
  <div class="code-header">
    <span class="language-label">{languageDisplay}</span>
    <button class="copy-button" data-copy-code={code} aria-label="Copy code to clipboard">
      <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M8 4V2C8 1.44772 8.44772 1 9 1H19C19.5523 1 20 1.44772 20 2V16C20 16.5523 19.5523 17 19 17H17V19C17 20.1046 16.1046 21 15 21H3C1.89543 21 1 20.1046 1 19V7C1 5.89543 1.89543 5 3 5H5V4H8Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        <path d="M5 5H15C16.1046 5 17 5.89543 17 7V17" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>
      Copy
    </button>
  </div>
  <pre><code>{code}</code></pre>
</div>

<script>
  // Copy to clipboard functionality
  document.addEventListener('DOMContentLoaded', function() {
    const copyButtons = document.querySelectorAll('.copy-button');
    
    copyButtons.forEach(button => {
      button.addEventListener('click', async function() {
        const code = this.getAttribute('data-copy-code');
        if (!code) return;
        
        try {
          await navigator.clipboard.writeText(code);
          
          // Visual feedback
          const originalText = this.innerHTML;
          this.innerHTML = `
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M20 6L9 17L4 12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
            Copied!
          `;
          this.style.color = '#22c55e';
          
          // Reset after 2 seconds
          setTimeout(() => {
            this.innerHTML = originalText;
            this.style.color = '';
          }, 2000);
        } catch (err) {
          console.error('Failed to copy code:', err);
          
          // Fallback visual feedback
          const originalText = this.innerHTML;
          this.innerHTML = `
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M18 6L6 18M6 6L18 18" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
            Failed
          `;
          this.style.color = '#ef4444';
          
          setTimeout(() => {
            this.innerHTML = originalText;
            this.style.color = '';
          }, 2000);
        }
      });
    });
  });
</script>

<style>
  .code-block {
    background-color: #2d3748;
    border-radius: var(--border-radius);
    overflow: hidden;
    margin: var(--space-md) 0;
    border: 1px solid #4a5568;
    font-family: var(--font-mono);
  }

  .code-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: #1a202c;
    padding: var(--space-xs) var(--space-md);
    border-bottom: 1px solid #4a5568;
  }

  .language-label {
    color: #a0aec0;
    font-size: var(--font-size-xs);
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .copy-button {
    display: flex;
    align-items: center;
    gap: var(--space-xs);
    background: none;
    border: 1px solid #4a5568;
    color: #a0aec0;
    padding: var(--space-xs) var(--space-sm);
    border-radius: var(--border-radius);
    font-size: var(--font-size-xs);
    cursor: pointer;
    transition: all 0.2s ease;
    font-family: var(--font-mono);
  }

  .copy-button:hover {
    background-color: #4a5568;
    color: #e2e8f0;
    border-color: #718096;
  }

  .copy-button:active {
    transform: translateY(1px);
  }

  .code-block pre {
    margin: 0;
    padding: var(--space-md);
    overflow-x: auto;
    background: transparent;
    border: none;
    color: #e2e8f0;
    font-size: var(--font-size-sm);
    line-height: 1.5;
  }

  .code-block code {
    background: none;
    border: none;
    padding: 0;
    color: inherit;
    font-size: inherit;
    font-family: var(--font-mono);
  }

  .copy-button svg {
    width: 16px;
    height: 16px;
    flex-shrink: 0;
  }
</style>