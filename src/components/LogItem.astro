---
/**
 * LogItem Component
 * Displays a single log entry in a list
 */
import AnimatedTag from './animations/AnimatedTag.jsx';
import AnimatedTagsContainer from './animations/AnimatedTagsContainer.jsx';
import { formatTagForDisplay, sortTags } from '../utils/tagUtils';

interface Props {
  entry: any;
  currentTag?: string;
  maxTags?: number;
}

const { entry, currentTag = '', maxTags = 3 } = Astro.props;
const entryTags = entry.data.tags || [];
// Sort tags with standardized tags first
const sortedTags = sortTags(entryTags);
const tagsToDisplay = sortedTags.slice(0, maxTags);
---

<li class="log-item">
  {/* Date and tags on the same line */}
  <div class="log-item-meta">
    <p class="log-item-date">
      <time datetime={entry.data.date.toISOString()}>
        {new Date(entry.data.date).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}
      </time>
    </p>
    {tagsToDisplay.length > 0 && (
      <div class="tags-container">
        <AnimatedTagsContainer client:visible className="tags">
          {tagsToDisplay.map((tag: string) => {
            const formattedTag = formatTagForDisplay(tag);
            return (
              <AnimatedTag
                client:visible
                href={`/tags/${tag.toLowerCase()}`}
                isActive={tag.toLowerCase() === currentTag.toLowerCase()}
                tagText={formattedTag}
              />
            );
          })}
        </AnimatedTagsContainer>
      </div>
    )}
  </div>

  {/* Title and Description */}
  <div class="log-item-header">
    <div class="log-item-title-container">
      <h2 class="log-item-title">
        <a href={`/${entry.slug}`}>{entry.data.title}</a>
      </h2>
    </div>
    {entry.data.description && (
      <p class="log-item-description">{entry.data.description}</p>
    )}
  </div>
</li>
