---
/**
 * LogItem Component
 * Displays a single log entry in a list
 */
import AnimatedTag from './animations/AnimatedTag.jsx';
import AnimatedTagsContainer from './animations/AnimatedTagsContainer.jsx';
import { formatTagForDisplay, sortTags } from '../utils/tagUtils';

interface Props {
  entry: any;
  currentTag?: string;
  maxTags?: number;
}

const { entry, currentTag = '', maxTags = 3 } = Astro.props;
const entryTags = entry.data.tags || [];
// Sort tags with standardized tags first
const sortedTags = sortTags(entryTags);
const tagsToDisplay = sortedTags.slice(0, maxTags);
---

<style>
  .log-item-tldr {
    margin-top: 0.5rem;
    font-style: italic;
    color: var(--color-text-muted);
    font-size: 0.95rem;
  }

  /* Styles from src/styles/components/log-entry.css */
  .log-header {
    margin-bottom: var(--space-md);
    padding-bottom: var(--space-sm);
    border-bottom: 1px solid var(--color-border);
  }

  .log-header h1 {
    font-size: var(--font-size-2xl);
    margin-top: 0;
    margin-bottom: var(--space-xs);
  }

  .log-header p {
    margin-bottom: 0;
    color: var(--color-text-muted);
  }

  .log-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .log-list li {
    list-style-type: none;
  }

  .log-list li::marker {
    display: none;
    content: "";
  }

  .log-item {
    margin-bottom: var(--space-md);
    padding: var(--space-sm) 0;
    border-bottom: 1px solid var(--color-border);
    transition: none; /* Added from log-index.css */
  }

  .log-item:hover { /* Added from log-index.css, likely no-op but for completeness */
    background-color: transparent;
  }

  .log-item:last-child {
    border-bottom: none;
  }

  .log-item-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--space-2xs);
  }

  .log-item-date {
    font-size: var(--font-size-xs);
    color: var(--color-text-muted);
    font-family: var(--font-mono);
    margin: 0;
    opacity: 0.8;
  }

  .log-item-date time::before { /* Added from log-index.css */
    content: "";
  }

  .log-item-header { /* Updated with flex properties from log-index.css */
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: var(--space-xs);
  }

  .log-item-title-container { /* Added from log-index.css */
    flex: 1;
    min-width: 60%; /* Consider if this is needed or if flex-basis is better */
  }

  .log-item-title {
    font-size: var(--font-size-lg);
    /* margin: 0; */ /* Original: margin: 0; log-index.css: margin: 0 0 var(--space-xs) 0; -> title container handles bottom margin effectively */
    margin: 0; /* Retaining simpler margin, as log-item-header has margin-bottom */
    line-height: var(--line-height-tight);
  }

  .log-item-title a {
    text-decoration: none;
    color: var(--color-text);
    /* transition: color var(--transition-fast); */ /* Original */
    transition: all 0.2s ease; /* From log-index.css, might be preferred if other properties animate */
  }

  .log-item-title a:hover {
    color: var(--color-accent1);
  }

  /* Description styling (from src/styles/components/log.css) */
  .log-item-description {
    margin: var(--space-2xs) 0 0;
    font-size: 0.9rem;
    color: var(--color-text-muted);
    line-height: 1.4;
    /* Ensuring the description can take available space if title is short */
    flex-basis: 100%; /* Allow it to wrap to the next line if needed after title container */
    margin-top: var(--space-xs); /* Add some space if it wraps */
  }

  .back-link-container {
    margin-top: var(--space-md);
  }

  .back-link {
    display: inline-block;
    font-family: var(--font-mono);
    font-size: var(--font-size-sm);
    color: var(--color-text-muted);
    transition: color var(--transition-fast);
  }

  .back-link:hover {
    color: var(--color-accent1);
  }

  .no-entries {
    color: var(--color-text-muted);
    font-style: italic;
  }

  @media (max-width: 480px) {
    .log-item-meta {
      flex-direction: column;
      align-items: flex-start;
    }

    .log-item-date {
      font-size: calc(var(--font-size-xs) - 0.05rem);
    }

    .log-item-title {
      font-size: var(--font-size-md);
    }

    .log-item-description {
      font-size: 0.85rem; /* Slightly smaller on mobile */
    }
  }
</style>

<li class="log-item">
  {/* Date and tags on the same line */}
  <div class="log-item-meta">
    <p class="log-item-date">
      <time datetime={entry.data.date.toISOString()}>
        {new Date(entry.data.date).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}
      </time>
    </p>
    {tagsToDisplay.length > 0 && (
      <div class="tags-container">
        <AnimatedTagsContainer client:visible className="tags">
          {tagsToDisplay.map((tag: string) => {
            const formattedTag = formatTagForDisplay(tag);
            return (
              <AnimatedTag
                client:visible
                href={`/tags/${tag.toLowerCase()}`}
                isActive={tag.toLowerCase() === currentTag.toLowerCase()}
                tagText={formattedTag}
              />
            );
          })}
        </AnimatedTagsContainer>
      </div>
    )}
  </div>

  {/* Title and Description */}
  <div class="log-item-header">
    <div class="log-item-title-container">
      <h2 class="log-item-title">
        <a href={`/${entry.slug}`}>{entry.data.title}</a>
      </h2>
    </div>
    {entry.data.description && (
      <p class="log-item-description">{entry.data.description}</p>
    )}
  </div>
</li>
